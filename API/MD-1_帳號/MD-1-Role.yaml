openapi: "3.0.3"
info:
  title: MD-1-Role 角色及權限管理API
  description: |
    帳號及角色權限管理模組，角色及其權限管理相關之API。
    
    ## API清單：
    * MD-1-Role-Create 角色-新增單筆。
    * MD-1-Role-Get 角色-查詢單筆。
    * MD-1-Role-Update 角色-更新單筆。
    * MD-1-Role-Remove 角色-刪除單筆。
    * MD-1-Role-List 角色-查詢多筆。
        
    ## 非200狀態回應說明
    目前定義的異常狀態如下，以下狀態於各API回應內容格式皆相同，因此各API預設只描述正常 200 的回應情況。
    * 請求格式錯誤。 http status code 400。
    * 指定的錯誤訊息或是缺少參數。 http status code 401。
    * 操作權限不足。 http status code 403。
    * 請求的資源不存在。 http status code 404。
    * 伺服端錯誤。 http status code 500。

  version: "1.0"
servers:
  - url: "{baseUrl}/star/api/role/{version}"
    variables:
      baseUrl:
        description: 主機網址
        default: 'localhost:8086'
      version:
        description: 版號
        default: "v1"
paths:
  /:
    get:
      tags:
        - MD-1-Role
      summary: MD-1-Role-Get
      description: |
        角色-查詢單筆。
      operationId: MD-1-Role-Get
      parameters:
        - $ref: '#/components/parameters/noCacheHeader'
        - $ref: '#/components/parameters/jsonContentTypeHeader'
        - $ref: '#/components/parameters/uidParam'
      responses:
        '200':
          description: 正常執行完成。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/RespBase'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/RoleGetResp'
  /create:
    post:
      tags:
        - MD-1-Role
      summary: MD-1-Role-Create
      description: 角色-新增單筆
      operationId: MD-1-Role-Create
      parameters:
        - $ref: '#/components/parameters/noCacheHeader'
        - $ref: '#/components/parameters/jsonContentTypeHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreateReq'
      responses:
        '200':
          $ref: '#/components/responses/UUIdSimpleResponse'
  /update:
    post:
      tags:
        - MD-1-Role
      summary: MD-1-Role-Update
      description: |
        角色-更新單筆。
      operationId: MD-1-Role-Update
      parameters:
        - $ref: '#/components/parameters/noCacheHeader'
        - $ref: '#/components/parameters/jsonContentTypeHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdateReq'
      responses:
        '200':
          $ref: '#/components/responses/UUIdSimpleResponse'
  /remove:
    get:
      tags:
        - MD-1-Role
      summary: MD-1-Role-Remove
      description: |
        角色-刪除單筆。  
        必須確認角色沒有被帳號使用才可被刪除。
      operationId: MD-1-Role-Remove
      parameters:
        - $ref: '#/components/parameters/noCacheHeader'
        - $ref: '#/components/parameters/jsonContentTypeHeader'
        - $ref: '#/components/parameters/uidParam'
      responses:
        '200':
          $ref: '#/components/responses/UUIdSimpleResponse'
  /list:
    post:
      tags:
        - MD-1-Role
      summary: MD-1-Role-List
      description: 角色-查詢多筆
      operationId: MD-1-Role-List
      parameters:
        - $ref: '#/components/parameters/noCacheHeader'
        - $ref: '#/components/parameters/jsonContentTypeHeader'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleListReq'
      responses:
        '200':
          description: 正常執行完成。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/RespBase'
                  - type: object
                    properties:
                      paging:
                        $ref: '#/components/schemas/Paging'
                      data:
                        description: 回應資料
                        type: array
                        items:
                          - $ref: '#/components/schemas/RoleListResp'
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RoleBase:
      description: 角色基本欄位
      properties:
        code:
          description: 角色代碼
          type: string
          maxLength: 20
        name:
          description: 角色名稱
          type: string
          maxLength: 100
        memo:
          description: 備註
          type: string
          maxLength: 1024
        enabled:
          description: 是否啟用
          type: boolean
          default: true
    RoleEntity:
      description: 角色資料
      allOf:
        - $ref: '#/components/schemas/RoleBase'
        - type: object
          properties:
            uid:
              description: 鍵值
              type: string
              format: uuid
    RoleCreateReq:
      description: 建立角色，請求參數
      required:
        - code
        - name
      allOf:
        - $ref: '#/components/schemas/RoleBase'
        - type: object
    RoleGetResp:
      description: 角色-查詢單筆，回應內容。
      allOf:
        - $ref: '#/components/schemas/RoleEntity'
        - type: object
    RoleUpdateReq:
      description: 更新角色，請求參數
      allOf:
        - $ref: '#/components/schemas/RoleEntity'
    RoleListReq:
      description: 查詢角色列表，請求參數
      properties:
        name:
          description: 角色名稱。 支援模糊查詢。
          type: string
        enabled:
          description: 是否啟用
          type: boolean
    RoleListResp:
      description: 查詢角色列表，回應內容
      properties:
        uid:
          description: 鍵值
          type: string
          format: uuid
        code:
          description: 角色代碼
          type: string
        name:
          description: 角色名稱
          type: string
        enabled:
          description: 是否啟用
          type: boolean
          default: true
        memo:
          description: 備註
          type: string
    IdSimpleResp:
      description: 只回應資料鍵值及名稱。
      type: object
      properties:
        id:
          description: 鍵值
          type: integer
        subject:
          description: id對應的標的的名稱
          type: string
    UUIdSimpleResp:
      description: 只回應資料鍵值及名稱。
      type: object
      properties:
        uid:
          description: 鍵值
          type: string
          format: uuid
        subject:
          description: uid對應的標的的名稱
          type: string
    SimpleResp:
      description: 只回應資料鍵值及名稱。
      type: object
      properties:
        uid:
          description: 鍵值
          type: string
          format: uuid
        subject:
          description: uid對應的標的的名稱
          type: string
    RespBase:
      type: object
      properties:
        code:
          type: integer
          description: |
            錯誤代碼: 
            * `0` : 成功
            * `1xxx` : 參數錯誤
            * `2xxx` : 權限不合法或資料不存在
            * `3xxx` : 系統異常
        message:
          type: string
          description: 錯誤訊息
    Paging:
      description: 分頁資訊
      type: object
      properties:
        offset:
          description: 查詢分頁的 offset
          type: integer
        limit:
          description: 查詢分頁的 limit
          type: integer
        total:
          description: 資料總筆數
          type: number
    TimeRange:
      description: 時間區間。有開始及結束時間。
      type: object
      properties:
        startTime:
          description: 開始時間
          type: string
          format: date-time
        endTime:
          description: 結束時間
          type: string
          format: date-time
  parameters:
    idParam:
      description: 鍵值參數
      name: id
      in: query
      required: true
      schema:
        type: integer
    uidParam:
      description: 鍵值參數
      name: uid
      in: query
      required: true
      schema:
        type: string
        format: uuid
    apiKeyHeader:
      description: 系統發佈給應用程式使用的 API Key。
      name: X-API-Key
      in: header
      required: true
      schema:
        type: string
    accessTokenHeader:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
        example: 'Bearer {accessToken}'
    offsetParam:
      description: 查詢分頁的 offset。與 limit 搭配使用。
      name: offset
      in: query
      required: false
      schema:
        type: integer
        format: int32
        example: 0
    limitParam:
      description: 查詢分頁的 limit。與 offset 搭配使用。
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        example: 20
    noCacheHeader:
      name: Cache-Control
      in: header
      required: true
      schema:
        type: string
        default: no-cache
    jsonContentTypeHeader:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
  responses:
    IdSimpleResponse:
      description: 正常執行完成，並回應 uid 及 subject。
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/RespBase'
              - type: object
                properties:
                  data:
                    description: 回應資料
                    allOf:
                      - $ref: '#/components/schemas/IdSimpleResp'
    UUIdSimpleResponse:
      description: 正常執行完成，並回應 uid 及 subject。
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/RespBase'
              - type: object
                properties:
                  data:
                    description: 回應資料
                    allOf:
                      - $ref: '#/components/schemas/UUIdSimpleResp'
    SimpleResponse:
      description: 正常執行完成，並回應 uid 及 subject。
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/RespBase'
              - type: object
                properties:
                  data:
                    description: 回應資料
                    allOf:
                      - $ref: '#/components/schemas/SimpleResp'
    MultiSimpleResponse:
      description: 正常執行完成，並回應多筆 SimpleResp。
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/RespBase'
              - type: object
                properties:
                  data:
                    description: 回應資料
                    type: array
                    items:
                      $ref: '#/components/schemas/SimpleResp'
    400ErrorResponse:
      description: 請求格式錯誤。 http status code 400。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RespBase'
    401ErrorResponse:
      description: 缺少 ApiKey, AccessToken 或是驗證失敗。 http status code 401。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RespBase'
    403ErrorResponse:
      description: 操作權限不足。 http status code 403。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RespBase'
    404ErrorResponse:
      description: 請求的資源不存在。 http status code 404。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RespBase'
    500ErrorResponse:
      description: 伺服端錯誤。 http status code 500。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RespBase'

